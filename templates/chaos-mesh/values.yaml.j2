nameOverride: ""
fullnameOverride: ""
customLabels: {}
clusterScoped: true
rbac:
  create: true
timezone: "UTC"
enableProfiling: true
enableCtrlServer: true
images:
  registry: "ghcr.io"
  tag: "v2.6.4"
imagePullSecrets: []
controllerManager:
  securityContext: {}
  hostNetwork: false
  allowHostNetworkTesting: false
  serviceAccount: chaos-controller-manager
  serviceAccountAnnotations: {}
  serviceAccountCreate: true
  priorityClassName: ""
  replicaCount: 3
  image:
    registry: ""
    repository: chaos-mesh/chaos-mesh
    tag: ""
  imagePullPolicy: IfNotPresent
  env:
    WEBHOOK_PORT: 10250
    METRICS_PORT: 10080
  enableFilterNamespace: false
  targetNamespace: chaos-mesh
  service:
    type: ClusterIP
  resources:
    limits: {}
    requests:
      cpu: 25m
      memory: 256Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  enabledControllers:
    - "*"
  enabledWebhooks:
    - "*"
  podChaos:
    podFailure:
      pauseImage: gcr.io/google-containers/pause:latest
  leaderElection:
    enabled: true
    leaseDuration: 15s
    renewDeadline: 10s
    retryPeriod: 2s
  chaosdSecurityMode: true
  localHelmChart:
    enabled: false
    volume:
      hostPath:
        path: /data/helm
        type: DirectoryOrCreate
chaosDaemon:
  image:
    registry: ""
    repository: chaos-mesh/chaos-daemon
    tag: ""
  imagePullPolicy: IfNotPresent
  grpcPort: 31767
  httpPort: 31766
  env: {}
  securityContext: {}
  hostNetwork: false
  mtls:
    enabled: true
  capabilities:
    add:
      - SYS_PTRACE
      - NET_ADMIN
      - NET_RAW
      - MKNOD
      - SYS_CHROOT
      - SYS_ADMIN
      - KILL
      - IPC_LOCK
  privileged: true
  priorityClassName: ""
  podAnnotations: {}
  serviceAccount: chaos-daemon
  serviceAccountAnnotations: {}
  podSecurityPolicy: false
  runtime: docker
  socketPath: /var/run/docker.sock
  resources:
    {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  updateStrategy:
    {}
dashboard:
  create: true
  rootUrl: http://localhost:2333
  securityContext: {}
  hostNetwork: false
  replicaCount: 1
  priorityClassName: ""
  serviceAccount: chaos-dashboard
  image:
    registry: ""
    repository: chaos-mesh/chaos-dashboard
    tag: ""
  imagePullPolicy: IfNotPresent
  securityMode: true
  gcpSecurityMode: false
  gcpClientId: ""
  gcpClientSecret: ""
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  extraContainers: []
  service:
    annotations: {}
    type: NodePort
  resources:
    limits: {}
    requests:
      cpu: 25m
      memory: 256Mi
  persistentVolume:
    enabled: false
    existingClaim: ""
    size: 8Gi
    storageClassName: standard
    mountPath: /data
    subPath: ""
  env:
    LISTEN_HOST: 0.0.0.0
    LISTEN_PORT: 2333
    METRIC_HOST: 0.0.0.0
    METRIC_PORT: 2334
    DATABASE_DRIVER: sqlite3
    DATABASE_DATASOURCE: /data/core.sqlite
    CLEAN_SYNC_PERIOD: 12h
    TTL_EVENT: 168h
    TTL_EXPERIMENT: 336h
    TTL_SCHEDULE: 336h
    TTL_WORKFLOW: 336h
  ingress:
    enabled: false
    certManager: false
    hosts:
      - name: dashboard.local
        tls: false
        tlsSecret: dashboard.local-tls
    paths: ["/"]
    apiVersionOverrides: ""
    ingressClassName: ""
dnsServer:
  create: true
  serviceAccount: chaos-dns-server
  image: ghcr.io/chaos-mesh/chaos-coredns:v0.2.6
  imagePullPolicy: IfNotPresent
  priorityClassName: ""
  nodeSelector: {}
  tolerations: []
  podAnnotations: {}
  name: chaos-mesh-dns-server
  grpcPort: 9288
  replicas: 1
  resources:
    limits: {}
    requests:
      cpu: 100m
      memory: 70Mi
  env:
    LISTEN_HOST: "0.0.0.0"
    LISTEN_PORT: 53
prometheus:
  create: false
  serviceAccount: prometheus
  image: prom/prometheus:v2.18.1
  imagePullPolicy: IfNotPresent
  priorityClassName: ""
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  resources:
    limits:
      cpu: 500m
      memory: 1024Mi
    requests:
      cpu: 250m
      memory: 512Mi
  service:
    type: ClusterIP
  volume:
    storage: 2Gi
    storageClassName: standard
webhook:
  certManager:
    enabled: false
  caBundlePEM: ""
  crtPEM: ""
  keyPEM: ""
  timeoutSeconds: 5
  FailurePolicy: Fail
  CRDS:
    - podchaos
    - iochaos
    - timechaos
    - networkchaos
    - kernelchaos
    - stresschaos
    - awschaos
    - azurechaos
    - gcpchaos
    - dnschaos
    - jvmchaos
    - schedule
    - workflow
    - httpchaos
    - blockchaos
    - physicalmachinechaos
    - physicalmachine
    - statuscheck
    - remotecluster
bpfki:
  create: false
  image:
    registry: ""
    repository: chaos-mesh/chaos-kernel
    tag: ""
  imagePullPolicy: IfNotPresent
  grpcPort: 50051
  resources:
    {}
chaosDlv:
  enable: false
  image:
    registry: ""
    repository: chaos-mesh/chaos-dlv
    tag: ""
  imagePullPolicy: IfNotPresent
