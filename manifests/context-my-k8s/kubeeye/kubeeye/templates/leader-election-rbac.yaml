---
# Source: kubeeye/templates/leader-election-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kubeeye-leader-election-role
  labels:
    helm.sh/chart: kubeeye-1.0.0
    app.kubernetes.io/name: kubeeye
    app.kubernetes.io/instance: kubeeye
    app.kubernetes.io/version: "v1.0.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: kubeeye/templates/leader-election-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubeeye-leader-election-rolebinding
  labels:
    helm.sh/chart: kubeeye-1.0.0
    app.kubernetes.io/name: kubeeye
    app.kubernetes.io/instance: kubeeye
    app.kubernetes.io/version: "v1.0.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 'kubeeye-leader-election-role'
subjects:
- kind: ServiceAccount
  name: 'kubeeye-controller-manager'
  namespace: 'kubeeye-system'
