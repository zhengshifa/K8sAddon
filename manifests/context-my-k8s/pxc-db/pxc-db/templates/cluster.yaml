---
# Source: pxc-db/templates/cluster.yaml
apiVersion: pxc.percona.com/v1
kind: PerconaXtraDBCluster
metadata:
  name: mysql-cluster-pxc-db
  namespace: mysql-cluster
  labels:
    app.kubernetes.io/name: pxc-db
    helm.sh/chart: pxc-db-1.15.0
    app.kubernetes.io/instance: mysql-cluster
    app.kubernetes.io/version: "1.15.0"
    app.kubernetes.io/managed-by: Helm
  finalizers:
    - percona.com/delete-pxc-pods-in-order
spec:
  crVersion: 1.15.0
  secretsName: mysql-cluster-pxc-db-secrets
  sslSecretName: mysql-cluster-pxc-db-ssl
  sslInternalSecretName: mysql-cluster-pxc-db-ssl-internal
  vaultSecretName: mysql-cluster-pxc-db-vault
  logCollectorSecretName: mysql-cluster-pxc-db-log-collector
  enableCRValidationWebhook: false
  pause: false
  updateStrategy: SmartUpdate
  upgradeOptions:
    versionServiceEndpoint: https://check.percona.com
    apply: disabled
    schedule: 0 4 * * *
  tls:
    enabled: true
  pxc:
    size: 3
    image: percona/percona-xtradb-cluster:8.0.36-28.1
    autoRecovery: true
    readinessDelaySec: 15
    livenessDelaySec: 300
    annotations:
      {}
    labels:
      {}
    resources:
      requests:
        cpu: 600m
        memory: 1G
      limits:
        {}
    sidecars:
      []
    sidecarVolumes:
      []
    sidecarPVCs:
      []
    sidecarResources:
      requests:
        {}
      limits:
        {}
    nodeSelector:
      {}
    affinity:
      antiAffinityTopologyKey: kubernetes.io/hostname
    tolerations:
      []
    podDisruptionBudget:
      maxUnavailable: 1
    volumeSpec:
      persistentVolumeClaim:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: "8Gi"
    gracePeriod: 600
    readinessProbes:
      failureThreshold: 5
      initialDelaySeconds: 15
      periodSeconds: 30
      successThreshold: 1
      timeoutSeconds: 15
    livenessProbes:
      failureThreshold: 3
      initialDelaySeconds: 300
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
  haproxy:
    enabled: true
    size: 3
    image: percona/haproxy:2.8.5
    annotations:
      {}
    labels:
      {}
    resources:
      requests:
        cpu: 600m
        memory: 1G
      limits:
        {}
    sidecars:
      []
    sidecarVolumes:
      []
    sidecarPVCs:
      []
    sidecarResources:
      requests:
        {}
      limits:
        {}
    nodeSelector:
      {}
    affinity:
      antiAffinityTopologyKey: kubernetes.io/hostname
    tolerations:
      []
    podDisruptionBudget:
      maxUnavailable: 1
    volumeSpec:
      emptyDir: {}
    gracePeriod: 30
    readinessDelaySec: 15
    livenessDelaySec: 300
    readinessProbes:
      failureThreshold: 3
      initialDelaySeconds: 15
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 1
    livenessProbes:
      failureThreshold: 4
      initialDelaySeconds: 60
      periodSeconds: 30
      successThreshold: 1
      timeoutSeconds: 5
  proxysql:
    enabled: false
  logcollector:
    enabled: true
    image: percona/percona-xtradb-cluster-operator:1.15.0-logcollector-fluentbit3.1.4
    resources:
      requests:
        cpu: 200m
        memory: 100M
      limits:
        {}
  pmm:
    enabled: false
  backup:
    image: percona/percona-xtradb-cluster-operator:1.15.0-pxc8.0-backup-pxb8.0.35
    pitr:
      enabled: false
    storages:
      STORAGE-NAME-HERE:
        type: filesystem
        volume:
          persistentVolumeClaim:
            accessModes:
            - ReadWriteOnce
            resources:
              requests:
                storage: 6G
            storageClassName: local-path
      azure-blob:
        azure:
          container: test
          credentialsSecret: azure-secret
        type: azure
      fs-pvc:
        type: filesystem
        volume:
          persistentVolumeClaim:
            accessModes:
            - ReadWriteOnce
            resources:
              requests:
                storage: 6G
            storageClassName: local-path
      s3-us-west:
        s3:
          bucket: S3-BACKUP-BUCKET-NAME-HERE
          credentialsSecret: my-cluster-name-backup-s3
          region: us-west-2
        type: s3
        verifyTLS: true
    schedule:
      - keep: 5
        name: daily-backup
        schedule: 0 0 * * *
        storageName: fs-pvc
