---
# Source: argo-cd/charts/redis-ha/templates/redis-haproxy-deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: argo-cd-redis-ha-haproxy
  namespace: "argo-cd"
  labels:
    app: redis-ha
    heritage: "Helm"
    release: "argo-cd"
    chart: redis-ha-4.27.6
spec:
  strategy:
    type: RollingUpdate
  revisionHistoryLimit: 1
  replicas: 3
  selector:
    matchLabels:
      app: redis-ha-haproxy
      release: argo-cd
  template:
    metadata:
      name: argo-cd-redis-ha-haproxy
      labels:
        app: redis-ha-haproxy
        release: argo-cd
        app.kubernetes.io/name: argocd-redis-ha-haproxy
      annotations:
        prometheus.io/port: "9101"
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        checksum/config: 9c523e23308dec88821b3e58ea90fd5afccac9f93ea491af09a99c3024aa7623
    spec:
      # Needed when using unmodified rbac-setup.yml
      
      serviceAccountName: argo-cd-redis-ha-haproxy
      automountServiceAccountToken: false
      securityContext: 
        fsGroup: 99
        runAsNonRoot: true
        runAsUser: 99
      nodeSelector:
        {}
      tolerations:
        []
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: redis-ha-haproxy
                  release: argo-cd
              topologyKey: kubernetes.io/hostname
      initContainers:
      - name: config-init
        image: public.ecr.aws/docker/library/haproxy:2.9.4-alpine
        imagePullPolicy: IfNotPresent
        resources:
          {}
        command:
        - sh
        args:
        - /readonly/haproxy_init.sh
        securityContext: 
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - name: config-volume
          mountPath: /readonly
          readOnly: true
        - name: data
          mountPath: /data
      containers:
      - name: haproxy
        image: public.ecr.aws/docker/library/haproxy:2.9.4-alpine
        imagePullPolicy: IfNotPresent
        securityContext: 
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        env:
        - name: AUTH
          valueFrom:
            secretKeyRef:
              name: argocd-redis
              key: auth
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8888
          initialDelaySeconds: 5
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8888
          initialDelaySeconds: 5
          periodSeconds: 3
        ports:
        - name: redis
          containerPort: 6379
        - name: metrics-port
          containerPort: 9101
        resources:
          {}
        volumeMounts:
        - name: data
          mountPath: /usr/local/etc/haproxy
        - name: shared-socket
          mountPath: /run/haproxy
        lifecycle:
          {}
      volumes:
      - name: config-volume
        configMap:
          name: argo-cd-redis-ha-configmap
      - name: shared-socket
        emptyDir:
          {}
      - name: data
        emptyDir:
          {}
