apiVersion: batch/v1
kind: CronJob
metadata:
  name: rocketmq-test
  namespace: "kube-system"
spec:
  concurrencyPolicy: Allow
  failedJobsHistoryLimit: 0
  jobTemplate:
    metadata:
      creationTimestamp: null
    spec:
      template:
        metadata:
          creationTimestamp: null
        spec:
          containers:
          - args:
            - |
              #!/bin/bash
              # 设置 RocketMQ 的 Namesrv 地址
              NAMESRV_ADDR="rocketmq-namesrv.olprod:9876"
              # 设置 Topic 名称
              TOPIC="TestTopic"
              # 创建 Topic
              bin/mqadmin updateTopic -n  -c DefaultCluster -t 
              # 检查创建 Topic 是否成功
              if [ $? -eq 0 ]; then
                echo "Topic  created successfully"
              else
                echo "Failed to create topic "
                exit 1
              fi
              # 发送消息
              bin/mqadmin sendMessage -n  -c DefaultCluster -t  -p "Hello, RocketMQ" &
              sleep 5
              # 消费消息
              bin/mqadmin consumeMessage -n   -t   | grep "Hello, RocketMQ"
              # 检查消费是否成功
              if [ $? -eq 0 ]; then
                echo "Messages consumed successfully"
              else
                echo "Failed to consume messages"
                exit 1
              fi
              # 等待一段时间，确保消息被成功发送和消费
              sleep 5
              # 删除 Topic
              bin/mqadmin deleteTopic -n  -c DefaultCluster -t 
              # 检查删除 Topic 是否成功
              if [ $? -eq 0 ]; then
                echo "Topic  deleted successfully"
              else
                echo "Failed to delete topic "
                exit 1
              fi
            command:
            - /bin/bash
            - -c
            image: chinamobile.com/devops-tool/rocketmq-4.9.2:v1
            imagePullPolicy: IfNotPresent
            name: rocketmq-test-container
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: OnFailure
          schedulerName: default-scheduler
          terminationGracePeriodSeconds: 30
  schedule: "*/5 * * * *"
  successfulJobsHistoryLimit: 1
  suspend: false
