finalizers:
  - percona.com/delete-pxc-pods-in-order
nameOverride: ""
fullnameOverride: ""
annotations: {}
operatorImageRepository: percona/percona-xtradb-cluster-operator
crVersion: 1.15.0
ignoreAnnotations: []
ignoreLabels: []
pause: false
updateStrategy: SmartUpdate
upgradeOptions:
  versionServiceEndpoint: https://check.percona.com
  apply: disabled
  schedule: "0 4 * * *"
enableCRValidationWebhook: false
tls:
  enabled: true
pxc:
  size: 3
  image:
    repository: percona/percona-xtradb-cluster
    tag: 8.0.36-28.1
  autoRecovery: true
  imagePullSecrets: []
  annotations: {}
  labels: {}
  readinessDelaySec: 15
  livenessDelaySec: 300
  resources:
    requests:
      memory: 1G
      cpu: 600m
    limits: {}
  sidecars: []
  sidecarVolumes: []
  sidecarPVCs: []
  sidecarResources:
    requests: {}
    limits: {}
  nodeSelector: {}
  affinity:
    antiAffinityTopologyKey: "kubernetes.io/hostname"
  tolerations: []
  gracePeriod: 600
  podDisruptionBudget:
    maxUnavailable: 1
  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 8Gi
  certManager: false
  readinessProbes:
    initialDelaySeconds: 15
    timeoutSeconds: 15
    periodSeconds: 30
    successThreshold: 1
    failureThreshold: 5
  livenessProbes:
    initialDelaySeconds: 300
    timeoutSeconds: 5
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
haproxy:
  enabled: true
  size: 3
  image: percona/haproxy:2.8.5
  imagePullSecrets: []
  annotations: {}
  labels: {}
  readinessDelaySec: 15
  livenessDelaySec: 300
  resources:
    requests:
      memory: 1G
      cpu: 600m
    limits: {}
  sidecars: []
  sidecarVolumes: []
  sidecarPVCs: []
  sidecarResources:
    requests: {}
    limits: {}
  nodeSelector: {}
  affinity:
    antiAffinityTopologyKey: "kubernetes.io/hostname"
  tolerations: []
  gracePeriod: 30
  podDisruptionBudget:
    maxUnavailable: 1
  readinessProbes:
    initialDelaySeconds: 15
    timeoutSeconds: 1
    periodSeconds: 5
    successThreshold: 1
    failureThreshold: 3
  livenessProbes:
    initialDelaySeconds: 60
    timeoutSeconds: 5
    periodSeconds: 30
    successThreshold: 1
    failureThreshold: 4
proxysql:
  enabled: false
  size: 3
  image: "percona/proxysql2:2.5.5"
  imagePullSecrets: []
  annotations: {}
  labels: {}
  readinessDelaySec: 15
  livenessDelaySec: 300
  resources:
    requests:
      memory: 1G
      cpu: 600m
    limits: {}
  sidecars: []
  sidecarVolumes: []
  sidecarPVCs: []
  sidecarResources:
    requests: {}
    limits: {}
  nodeSelector: {}
  affinity:
    antiAffinityTopologyKey: "kubernetes.io/hostname"
  tolerations: []
  gracePeriod: 30
  podDisruptionBudget:
    maxUnavailable: 1
  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 8Gi
logcollector:
  enabled: true
  image: percona/percona-xtradb-cluster-operator:1.15.0-logcollector-fluentbit3.1.4
  imagePullSecrets: []
  resources:
    requests:
      memory: 100M
      cpu: 200m
    limits: {}
pmm:
  enabled: false
  image:
    repository: percona/pmm-client
    tag: 2.42.0
  imagePullSecrets: []
  serverHost: monitoring-service
  serverUser: admin
  resources:
    requests:
      memory: 150M
      cpu: 300m
    limits: {}
backup:
  enabled: true
  image:
    repository: percona/percona-xtradb-cluster-operator
    tag: 1.15.0-pxc8.0-backup-pxb8.0.35
  imagePullSecrets: []
  pitr:
    enabled: false
    storageName: s3-us-west-binlogs
    timeBetweenUploads: 60
    timeoutSeconds: 60
    resources:
      requests: {}
      limits: {}
  storages:
    s3-us-west:
      type: s3
      verifyTLS: true
      s3:
        bucket: S3-BACKUP-BUCKET-NAME-HERE
        credentialsSecret: my-cluster-name-backup-s3
        region: us-west-2
    azure-blob:
      type: azure
      azure:
        credentialsSecret: azure-secret
        container: test
    fs-pvc:
      type: filesystem
      volume:
        persistentVolumeClaim:
          storageClassName: local-path
          accessModes: [ "ReadWriteOnce" ]
          resources:
            requests:
              storage: 6G
    STORAGE-NAME-HERE:
      type: filesystem
      volume:
        persistentVolumeClaim:
          storageClassName: local-path
          accessModes: [ "ReadWriteOnce" ]
          resources:
            requests:
              storage: 6G        
  schedule:
    - name: "daily-backup"
      schedule: "0 0 * * *"
      keep: 5
      storageName: fs-pvc


secrets:
  tls: {}
